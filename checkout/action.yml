name: GIT Checkout
description: Configure git user so script would be able to read and write repositories if necessary

inputs:
  repository:
    description: Repository name with owner. For example, Rippling/github-actions-mobile
    required: false
  ref:
    description: The branch, tag or SHA to checkout.
    required: false
  path:
    description: Relative path under $GITHUB_WORKSPACE to place the repository.
    required: false
  clean:
    description: Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching.
    required: false
    default: 'true'
  fetch-depth:
    description: Number of commits to fetch. 0 indicates all history for all branches and tags.
    required: false
    default: '1'
  lfs:
    description: Whether to download Git-LFS files.
    required: false
    default: 'false'
  submodules:
    description: Whether to checkout submodules (true to checkout submodules or recursive to recursively checkout submodules).
    required: false
    default: 'false'
  token:
    description: Github Access Token for managing access
    required: true
  ssh-private-key:
    description: SSH Private key
    required: true
  ssh-public-key:
    description: SSH Public key
    required: true

runs:
  using: composite
  steps:
    - name: Checkout project with write access
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        path: ${{ inputs.path }}
        clean: ${{ inputs.clean }}
        fetch-depth: ${{ inputs.fetch-depth }}
        lfs: ${{ inputs.lfs }}
        submodules: ${{ inputs.submodules }}
        token: ${{ inputs.token }}

    - name: Configure SSH Client
      run: |
        mkdir -p ~/.ssh/
        echo "${{ inputs.ssh-private-key }}" > ~/.ssh/id_rsa
        echo "${{ inputs.ssh-public-key }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa.pub
      shell: bash

    - name: Restart SSH Client
      run: |
        if [ "$RUNNER_OS" == "macOS" ]; then
          sudo launchctl stop com.openssh.sshd
          sudo launchctl start com.openssh.sshd
        else
          sudo systemctl restart ssh
        fi
      shell: bash
    
    - name: Configuring GIT User
      run: |
        git config --global user.email "frontend@rippling.com"
        git config --global user.name "Rippling Frontend CI"
      shell: bash
